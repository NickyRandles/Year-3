public class Stack
{
	public char bracket;
	
	public Link next;
	
	public Stack(char bracket)
	{
		this.bracket = bracket;
	}
	
	public Link firstLink;
	

	public boolean isEmpty()
	{
		return(firstLink == null);
	}

  public void popAll(){}
  // Removes all the items from the stack.
  // Precondition: None.
  // PostCondition: Stack is empty.
 
  public void push(char bracket)
  {
	  
  }


  public Object pop() throws StackException{
	return closedBracket;}
  // Removes the top of a stack.
  // Precondition: None.
  // Postcondition: If the stack is not empty, the item
  // that was added most recently is removed from the
  // stack and returned.
  // Exception: Throws StackException if the stack is
  // empty.

  public Object top() throws StackException{
	return closedBracket;}
  // Retrieves the top of a stack.
  // Precondition: None.
  // Postcondition: If the stack is not empty, the item
  // that was added most recently is returned. The
  // stack is unchanged.
  // Exception: Throws StackException if the stack is
  // empty.

}  // end StackInterface