
public class CircularList {

	public Node list;
	public int numUsers;
	
	public CircularList()
	{
		list = null;
		numUsers = 0;
	}
	
	public boolean isEmpty()
	{
		return numUsers == 0;
	}
	
	public int size()
	{
		return numUsers;
	}
	
	private Node find(int index)
	{
		Node curr = list.getNext(); 
		for (int skip = 1; skip < index; skip++)
		{
		  curr = curr.getNext();
		} 
		return curr;
	 } 
	  
	public Object get(int index)
	{
		if (index >= 1 && index <= numUsers)
		{
			Node curr = find(index);
			Object dataItem = curr.getUser();
			return dataItem;
		}
		
		return index;
	} 

	
	public void add(int index, String user) 
	  {
	    if (index >= 1 && index <= numUsers+1)
	    {
	      if (index == 1)
	      {
	        if (list == null) 
			 {
				Node newNode = new Node(user, null);
			    list = newNode;
			    list.setNext(newNode);
			 }
	        else
	         {
	          Node newNode = new Node(user, list.getNext());
	          list.setNext(newNode);
		     }
	     }
	      else
	      {
	        Node prev = find(index-1);
	        Node newNode = new Node(user, prev.getNext());
	        prev.setNext(newNode);
	        if (index == numUsers+1) 
	           list = newNode;
	       } 

	      numUsers++;
	    }

	  }  // end add
	
	public void display()
	{
		for(int i = 1; i <= numUsers; i++)
		{
			 System.out.println("USER: " + this.get(i) + " Logged On");	
		}
	}
	
    public void appendTraverse(Object user)
    {
       Node first = list.getNext();
	   Node curr  = first.getNext();

	   // Traverse the circular list
	   while(curr != first)
		 curr = curr.getNext();


	  // Node newNode = new Node(user, first);
       //list = newNode;
    }

	
	
}
